name: Deploy to AWS ECS
on:
  push:
    branches:
      - main

env:
  IMAGE_TAG:  ${{ github.sha }}
  ECS_CLUSTER: RkDevCluster
  ECS_SERVICE: mynodeappservice
  ECS_TASK_DEFINITION: .aws/mynodejsapptaskdef.json
  CONTAINER_NAME: nodejsappcont


jobs:
  build:
    name: Build & Push Docker Image to AWS ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Running Lint
        run: echo "Lint..." 

      - name: container image name
        run: echo ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG         

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .

      - name: Tag Docker Image
        run: |
          docker tag ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          
  deploy:
    name: Deploy to AWS ECS (EC2)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}


      - name: container image name
        run: echo ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG 

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG        

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true